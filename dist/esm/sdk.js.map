{"version":3,"file":"sdk.js","sourceRoot":"","sources":["../../src/sdk.ts"],"names":[],"mappings":"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","sourcesContent":["import type { BN } from \"@project-serum/anchor\";\nimport { newProgramMap } from \"@saberhq/anchor-contrib\";\nimport type { AugmentedProvider, Provider } from \"@saberhq/solana-contrib\";\nimport {\n  SolanaAugmentedProvider,\n  TransactionEnvelope,\n} from \"@saberhq/solana-contrib\";\nimport type { PublicKey, Signer } from \"@solana/web3.js\";\nimport { Keypair, SystemProgram } from \"@solana/web3.js\";\n\nimport type { TribecaPrograms } from \"./constants\";\nimport {\n  DEFAULT_LOCKER_PARAMS,\n  TRIBECA_ADDRESSES,\n  TRIBECA_IDLS,\n} from \"./constants\";\nimport type { LockerParams } from \"./programs/lockedVoter\";\nimport { GovernWrapper } from \"./wrappers\";\nimport { findLockerAddress } from \"./wrappers/lockedVoter/pda\";\nimport { findSimpleElectorateAddress } from \"./wrappers/simpleVoter/pda\";\nimport type { PendingElectorate } from \"./wrappers/simpleVoter/types\";\n\n/**\n * TribecaSDK.\n */\nexport class TribecaSDK {\n  constructor(\n    readonly provider: AugmentedProvider,\n    readonly programs: TribecaPrograms\n  ) {}\n\n  /**\n   * Creates a new instance of the SDK with the given keypair.\n   */\n  withSigner(signer: Signer): TribecaSDK {\n    return TribecaSDK.load({\n      provider: this.provider.withSigner(signer),\n    });\n  }\n\n  /**\n   * Loads the SDK.\n   * @returns\n   */\n  static load({ provider }: { provider: Provider }): TribecaSDK {\n    const programs: TribecaPrograms = newProgramMap<TribecaPrograms>(\n      provider,\n      TRIBECA_IDLS,\n      TRIBECA_ADDRESSES\n    );\n    return new TribecaSDK(new SolanaAugmentedProvider(provider), programs);\n  }\n\n  /**\n   * Govern program helpers.\n   */\n  get govern(): GovernWrapper {\n    return new GovernWrapper(this);\n  }\n\n  async createSimpleElectorate({\n    proposalThreshold,\n    governor,\n    govTokenMint,\n    baseKP = Keypair.generate(),\n  }: {\n    proposalThreshold: BN;\n    baseKP?: Keypair;\n    governor: PublicKey;\n    govTokenMint: PublicKey;\n  }): Promise<PendingElectorate> {\n    const [electorate, bump] = await findSimpleElectorateAddress(\n      baseKP.publicKey\n    );\n    return {\n      electorate,\n      tx: new TransactionEnvelope(\n        this.provider,\n        [\n          this.programs.SimpleVoter.instruction.initializeElectorate(\n            bump,\n            proposalThreshold,\n            {\n              accounts: {\n                base: baseKP.publicKey,\n                governor,\n                electorate,\n                govTokenMint,\n                payer: this.provider.wallet.publicKey,\n                systemProgram: SystemProgram.programId,\n              },\n            }\n          ),\n        ],\n        [baseKP]\n      ),\n    };\n  }\n\n  /**\n   * Creates a Locker, which is an Electorate that supports vote locking.\n   * @returns\n   */\n  async createLocker({\n    governor,\n    govTokenMint,\n    baseKP = Keypair.generate(),\n    ...providedLockerParams\n  }: {\n    baseKP?: Keypair;\n    governor: PublicKey;\n    govTokenMint: PublicKey;\n  } & Partial<LockerParams>): Promise<{\n    locker: PublicKey;\n    tx: TransactionEnvelope;\n  }> {\n    const [locker, bump] = await findLockerAddress(baseKP.publicKey);\n    const lockerParams = {\n      ...DEFAULT_LOCKER_PARAMS,\n      ...providedLockerParams,\n    };\n    return {\n      locker,\n      tx: new TransactionEnvelope(\n        this.provider,\n        [\n          this.programs.LockedVoter.instruction.newLocker(bump, lockerParams, {\n            accounts: {\n              base: baseKP.publicKey,\n              governor,\n              locker,\n              tokenMint: govTokenMint,\n              payer: this.provider.wallet.publicKey,\n              systemProgram: SystemProgram.programId,\n            },\n          }),\n        ],\n        [baseKP]\n      ),\n    };\n  }\n}\n"]}